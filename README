g8 for jamming together a play20 app
=====================================

One challenge with scala is the proliferation of dsl's to automagically configure things, and finding the best lib to accomplish a goal (that is compiled for this version of scala, as a release, and available via sbt).

Here is my current best guess at a robust toolchain to quickstart.

The default settings for this project are
- use improved sbt script
- configure build.sbt to build sbt with 2.10.0-RC1
- configure build.properties to use sbt 0.12.1
- setup some standard libs & repositories in Build.scala
- add some sbt plugins for graphPlugin, sbtPlugin, eclispePlugin

Ways to run the app:
- via sbt: sbt clean update compile stage dist run 
- via Play20: play run
- via Procfile: gem install foreman && foreman start
- deploy to heroku

Some useful heroku commands:
heroku config:add JAVA_OPTS='-Xmx512m -Xss512k -XX:+UseCompressedOops -XX:MaxPermSize=456M -javaagent:heroku-javaagent-1.2.jar=stdout=true -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCDateStamps  -XX:+CMSClassUnloadingEnabled'
heroku config:add SBT_OPTS='-Xmx512m -Xss512k -XX:+UseCompressedOops -XX:MaxPermSize=456M -javaagent:heroku-javaagent-1.2.jar=stdout=true -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCDateStamps  -XX:+CMSClassUnloadingEnabled'
